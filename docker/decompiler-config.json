{
  "decompParams": {
    "verboseOut": true,
    "outputFormat": "plain",
    "keepAllFuncs": false,
    "selectedDecodeOnly": false,
    "detectStaticCode": true,
    "backendDisabledOpts": "",
    "backendEnabledOpts": "",
    "backendCallInfoObtainer": "optim",
    "backendVarRenamer": "readable",
    "backendNoOpts": false,
    "backendEmitCfg": false,
    "backendEmitCg": false,
    "backendAggressiveOpts": false,
    "backendKeepAllBrackets": false,
    "backendKeepLibraryFuncs": false,
    "backendNoTimeVaryingInfo": false,
    "backendNoVarRenaming": false,
    "backendNoCompoundOperators": false,
    "backendNoSymbolicNames": false,
    "timeout": 0,
    "maxMemoryLimit": 0,
    "maxMemoryLimitHalfRam": true,
    "ordinalNumDirectory": "./support/ordinals/",
    "staticSignPaths": ["./support/generic/yara_patterns/static-code/"],
    "libraryTypeInfoPaths": [
      "./support/generic/types/arm.json",
      "./support/generic/types/cstdlib.json",
      "./support/generic/types/linux.json",
      "./support/generic/types/windows.json",
      "./support/generic/types/windrivers.json"
    ],
    "cryptoPatternPaths": [
      "./support/generic/yara_patterns/signsrch/signsrch.yarac",
      "./support/generic/yara_patterns/signsrch/signsrch_regex.yarac"
    ],
    "llvmPasses": [
      "retdec-provider-init",
      "retdec-decoder",
      "verify",
      "retdec-x86-addr-spaces",
      "retdec-x87-fpu",
      "retdec-main-detection",
      "retdec-idioms-libgcc",
      "retdec-inst-opt",
      "retdec-cond-branch-opt",
      "retdec-syscalls",
      "retdec-stack",
      "retdec-constants",
      "retdec-param-return",
      "retdec-inst-opt-rda",
      "retdec-inst-opt",
      "retdec-simple-types",
      "retdec-write-dsm",
      "retdec-remove-asm-instrs",
      "retdec-class-hierarchy",
      "retdec-select-fncs",
      "retdec-inst-opt",
      "retdec-register-localization",
      "retdec-value-protect",
      "instcombine",
      "tbaa",
      "basicaa",
      "simplifycfg",
      "early-cse",
      "tbaa",
      "basicaa",
      "scoped-noalias",
      "assumption-cache-tracker",
      "profile-summary-info",
      "forceattrs",
      "inferattrs",
      "domtree",
      "callsite-splitting",
      "ipsccp",
      "called-value-propagation",
      "globalopt",
      "domtree",
      "mem2reg",
      "deadargelim",
      "domtree",
      "aa",
      "loops",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "simplifycfg",
      "early-cse",
      "basiccg",
      "globals-aa",
      "prune-eh",
      "functionattrs",
      "argpromotion",
      "domtree",
      "sroa",
      "aa",
      "memoryssa",
      "early-cse-memssa",
      "speculative-execution",
      "aa",
      "lazy-value-info",
      "jump-threading",
      "correlated-propagation",
      "simplifycfg",
      "domtree",
      "aa",
      "loops",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "libcalls-shrinkwrap",
      "loops",
      "branch-prob",
      "block-freq",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "aa",
      "loops",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "tailcallelim",
      "simplifycfg",
      "reassociate",
      "domtree",
      "loops",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "aa",
      "scalar-evolution",
      "loop-rotate",
      "memoryssa",
      "licm",
      "lcssa",
      "loop-unswitch",
      "simplifycfg",
      "domtree",
      "aa",
      "loops",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "loop-simplifycfg",
      "loop-simplify",
      "lcssa-verification",
      "aa",
      "loop-accesses",
      "loop-load-elim",
      "lcssa",
      "scalar-evolution",
      "indvars",
      "loop-idiom",
      "loop-deletion",
      "loop-unroll",
      "mldst-motion",
      "phi-values",
      "aa",
      "memdep",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "gvn",
      "phi-values",
      "aa",
      "memdep",
      "memcpyopt",
      "sccp",
      "demanded-bits",
      "bdce",
      "aa",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "lazy-value-info",
      "jump-threading",
      "correlated-propagation",
      "aa",
      "phi-values",
      "memdep",
      "dse",
      "bdce",
      "aa",
      "memoryssa",
      "loops",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "scalar-evolution",
      "licm",
      "postdomtree",
      "adce",
      "simplifycfg",
      "domtree",
      "aa",
      "loops",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "barrier",
      "elim-avail-extern",
      "basiccg",
      "rpo-functionattrs",
      "strip-dead-prototypes",
      "globaldce",
      "constmerge",
      "constprop",
      "instcombine",
      "instcombine",
      "tbaa",
      "basicaa",
      "simplifycfg",
      "early-cse",
      "tbaa",
      "basicaa",
      "globalopt",
      "globaldce",
      "basiccg",
      "globals-aa",
      "domtree",
      "float2int",
      "domtree",
      "mem2reg",
      "instcombine",
      "simplifycfg",
      "early-cse",
      "lazy-value-info",
      "jump-threading",
      "correlated-propagation",
      "simplifycfg",
      "instcombine",
      "simplifycfg",
      "reassociate",
      "loops",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "aa",
      "scalar-evolution",
      "loop-rotate",
      "licm",
      "lcssa",
      "instcombine",
      "loop-simplifycfg",
      "loop-accesses",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "loop-distribute",
      "branch-prob",
      "block-freq",
      "scalar-evolution",
      "aa",
      "loop-accesses",
      "demanded-bits",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "loop-simplify",
      "scalar-evolution",
      "aa",
      "loop-accesses",
      "lazy-branch-prob",
      "lazy-block-freq",
      "loop-load-elim",
      "aa",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "lcssa",
      "indvars",
      "loop-idiom",
      "loop-deletion",
      "gvn",
      "sccp",
      "instcombine",
      "lazy-value-info",
      "jump-threading",
      "correlated-propagation",
      "dse",
      "bdce",
      "adce",
      "simplifycfg",
      "domtree",
      "loops",
      "scalar-evolution",
      "aa",
      "demanded-bits",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "opt-remark-emitter",
      "instcombine",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "scalar-evolution",
      "loop-unroll",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instcombine",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "scalar-evolution",
      "licm",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "transform-warning",
      "alignment-from-assumptions",
      "strip-dead-prototypes",
      "globaldce",
      "constmerge",
      "domtree",
      "constprop",
      "instcombine",
      "retdec-inst-opt",
      "retdec-simple-types",
      "retdec-stack-ptr-op-remove",
      "retdec-idioms",
      "instcombine",
      "retdec-inst-opt",
      "retdec-idioms",
      "retdec-remove-phi",
      "loops",
      "branch-prob",
      "block-freq",
      "loop-simplify",
      "lcssa-verification",
      "lcssa",
      "aa",
      "scalar-evolution",
      "block-freq",
      "loop-sink",
      "lazy-branch-prob",
      "lazy-block-freq",
      "opt-remark-emitter",
      "instsimplify",
      "div-rem-pairs",
      "simplifycfg",
      "verify",
      "retdec-value-protect",
      "retdec-write-bc"
    ]
  }
}
